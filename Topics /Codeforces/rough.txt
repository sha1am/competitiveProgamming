 
 
 0-1 knapsack, 
 
 matlab ya toh 1 lo, ya toh 0 lo, aur fir dekho kya hota hai.
 
 
 
 map<int,int> ::iterator it=mp.end()-1;
 
 //what is ordered and unrodered map?
 // hwo to use greater and ascendnign order
 
 
 
 [ 3,3,3,3,3,3,3,3,3,7,7,7,7,7,2,2,2,2,2,1,1,1] 10^5 [3,7,2,1] =[3]
 [7,7,7,7,7,2,2,2,2,2,1,1,1]
 
 3-7
 7-3
 5-2
 1-1
 
 total size=13
 tot/2=6.5
 
# map<int,int> mp;
 
 bool check(map<int,int> mp, int a){
 	 map<int,int> ::iterator it=mp.begin;
 	 bool flag=false;
 	 for(;it!=mp.end();it++){
 	 	if(it->first==a){
 	 		// key exists
 	 		flag=true;
 	 		break;
 	 	}
 	 }
 	 
 	 return flag;
 }
 
 for(int i=0;i<arr.size();i++){
 	int a= arr[i];
 	
 	//check if a exists as a key in mp
 	if(check(mp,a)){
 		//exists
 		mp[a]+=1;
 	}
 	else{
 		mp[a]=1;
 	}
 	
 	
 }
 
sort(mp.begin(),mp.end());
int n=arr.size();
int nHalf=n/2;

int cnt=0;
int ans=0;
map<int,int> ::iterator it=mp.begin;
 	 for(;it!=mp.end();it++){
 	 	cnt+=it->second;
 	 	cntElements+=1;
 	 	if(cnt>nHalf){
 	 		break;
 	 	}
 	 }

cout<<ans<<endl;


// sort the map