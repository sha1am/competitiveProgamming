# Dynamic Programming Notes

-----------------------------------------------------------
Start
-----------------------------------------------------------

- How to identify its dynamic programming?
	- dp is enhanced recursion. (ie.recursion is parent of dp)
	- How to identify recursion?\
		- choice ( like you have option or not to chose something)
			- if the choice is overlapping then its dp.
			- only if there are two( or more)  calls in recursion then overlapping.
		- optimal 
			- min , max, largest,
	- something optimal is asked in dp.
	- 








___________________________________________________________________
-----------------------------------------------------------
#Doubts
- Will knap 0/1 it work with other choice daigram?
- What is the difference if we take two times x in choice daigram of knapsack 0-1?




-----------------------------------------------------------
-----------------------------------------------------------
End
-----------------------------------------------------------


Errors I generally make in DP.

- when filling values , you have to iterate according to the vector size provided. Not the T[N][M] , you initialize.
	-   int minimumTotal(vector<vector<int>>& triangle) {
	........
		for(intt i=0;i< triangle.size();i++){
	            for(intt j=0;j<triangle[i].size();j++){
	          
	}
	
